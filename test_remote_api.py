import requests
import json


def test_remote_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–¥–∞–ª–µ–Ω–Ω—ã–π API —Å–µ—Ä–≤–µ—Ä"""
    base_url = "http://5.101.50.27:8000"

    print("üåê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–î–ê–õ–ï–ù–ù–û–ì–û API")
    print("=" * 50)

    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã –∏–∑ investigate_api.py
    test_cases = [
        ("POST", "/employee/create", {
            "first_name": "–ò–≤–∞–Ω",
            "last_name": "–ò–≤–∞–Ω–æ–≤",
            "company_id": 1,
            "position": "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"
        }),
        ("GET", "/employee/info", {"id": 1}),
        ("PATCH", "/employee/change", {
            "id": 1,
            "position": "–°—Ç–∞—Ä—à–∏–π —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫"
        })
    ]

    for method, endpoint, data in test_cases:
        url = f"{base_url}{endpoint}"
        print(f"\n{method} {endpoint}:")
        print(f"Data: {json.dumps(data, ensure_ascii=False)}")

        try:
            if method == "GET":
                response = requests.get(url, params=data)
            elif method == "POST":
                response = requests.post(url, json=data)
            elif method == "PATCH":
                response = requests.patch(url, json=data)

            print(f"Status: {response.status_code}")

            if response.status_code < 400:
                print("‚úÖ –£—Å–ø–µ—Ö")
                if response.content:
                    try:
                        result = response.json()
                        print(f"Response: {json.dumps(result, ensure_ascii=False, indent=2)}")
                    except:
                        print(f"Response: {response.text}")
            else:
                print("‚ùå –û—à–∏–±–∫–∞")
                print(f"Response: {response.text}")

        except Exception as e:
            print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")


if __name__ == "__main__":
    test_remote_api()