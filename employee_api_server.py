from flask import Flask, request, jsonify
from flask_cors import CORS

app = Flask(__name__)
CORS(app)

# "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö" —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –≤ –ø–∞–º—è—Ç–∏
employees = [
    {"id": 1, "name": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "position": "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫", "salary": 100000, "department": "IT"},
    {"id": 2, "name": "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤", "position": "–ú–µ–Ω–µ–¥–∂–µ—Ä", "salary": 80000, "department": "–ü—Ä–æ–¥–∞–∂–∏"},
    {"id": 3, "name": "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞", "position": "–î–∏–∑–∞–π–Ω–µ—Ä", "salary": 90000, "department": "–î–∏–∑–∞–π–Ω"}
]

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ ID
next_id = 4


@app.route('/api/employees', methods=['GET'])
def get_employees():
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤"""
    return jsonify(employees)


@app.route('/api/employees/<int:employee_id>', methods=['GET'])
def get_employee(employee_id):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –ø–æ ID"""
    employee = next((emp for emp in employees if emp['id'] == employee_id), None)
    if employee:
        return jsonify(employee)
    return jsonify({"error": "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω"}), 404


@app.route('/api/employees', methods=['POST'])
def create_employee():
    """–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
    global next_id

    data = request.get_json()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
    if not data or not data.get('name') or not data.get('position'):
        return jsonify({"error": "–û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: name, position"}), 400

    new_employee = {
        "id": next_id,
        "name": data['name'],
        "position": data['position'],
        "salary": data.get('salary', 0),
        "department": data.get('department', '–ù–µ —É–∫–∞–∑–∞–Ω')
    }

    employees.append(new_employee)
    next_id += 1

    return jsonify(new_employee), 201


@app.route('/api/employees/<int:employee_id>', methods=['PUT'])
def update_employee(employee_id):
    """–û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
    employee = next((emp for emp in employees if emp['id'] == employee_id), None)
    if not employee:
        return jsonify({"error": "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω"}), 404

    data = request.get_json()

    # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ª—è
    if 'name' in data:
        employee['name'] = data['name']
    if 'position' in data:
        employee['position'] = data['position']
    if 'salary' in data:
        employee['salary'] = data['salary']
    if 'department' in data:
        employee['department'] = data['department']

    return jsonify(employee)


@app.route('/api/employees/<int:employee_id>', methods=['DELETE'])
def delete_employee(employee_id):
    """–£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"""
    global employees
    employee = next((emp for emp in employees if emp['id'] == employee_id), None)
    if not employee:
        return jsonify({"error": "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω"}), 404

    employees = [emp for emp in employees if emp['id'] != employee_id]
    return jsonify({"message": "–°–æ—Ç—Ä—É–¥–Ω–∏–∫ —É–¥–∞–ª–µ–Ω"}), 200


@app.route('/api/health', methods=['GET'])
def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞"""
    return jsonify({"status": "healthy", "message": "–°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç"})


if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ Employee API...")
    print("üìç API –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000")
    print("üìç –≠–Ω–¥–ø–æ–∏–Ω—Ç—ã:")
    print("   GET    /api/employees")
    print("   GET    /api/employees/<id>")
    print("   POST   /api/employees")
    print("   PUT    /api/employees/<id>")
    print("   DELETE /api/employees/<id>")
    print("   GET    /api/health")
    print("==================================================")

    app.run(debug=True, host='0.0.0.0', port=5000)